import librosa
import soundfile as sf
import numpy as np

# Load the first audio file
file_path_1 = 'RobertKirchner5-15-2023.m4a'
audio1, sr1 = librosa.load(file_path_1, sr=None)  # sr=None to maintain original sample rate

# Load the second audio file
file_path_2 = 'bo_calls_state.m4a'
audio2, sr2 = librosa.load(file_path_2, sr=None)

# Ensure both audio files have the same sampling rate
if sr1 != sr2:
    raise ValueError("Sampling rates do not match!")

# Pad the shorter audio file with zeros
max_length = max(len(audio1), len(audio2))
audio1 = np.pad(audio1, (0, max_length - len(audio1)), 'constant')
audio2 = np.pad(audio2, (0, max_length - len(audio2)), 'constant')

# Combine the audio files
combined_audio = audio1 + audio2

# Normalize combined audio to prevent clipping
combined_audio = combined_audio / np.max(np.abs(combined_audio))

# Save the combined audio
# Note: soundfile does not support M4A; saving as WAV. Use ffmpeg for M4A.
output_path = 'combined_audio.wav'
sf.write(output_path, combined_audio, sr1)

# If you need the output in M4A, consider converting the WAV file to M4A using ffmpeg:
# ffmpeg -i combined_audio.wav -codec:a libfdk_aac combined_audio.m4aadd_two_m4a.py
